import { Borrower } from "@prisma/client";
import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";
import BorrowerModal from "../components/BorrowerModal";
import LendBook from "../components/LendBook";

const Borrower: NextPage = () => {
  const [borrower, setBorrower] = useState<Borrower[]>([]);
  const [openBorrowerModal, setOpenBorrowerModal] = useState<boolean>(false);
  const [borrowerId, setBorrowerId] = useState<string>("");
  const [openLendBookModal, setOpenLendBookModal] = useState<boolean>(false);

  trpc.useQuery(["borrower.getAllBorrower"], {
    onSuccess(borrower) {
      setBorrower(borrower);
    },
  });

  const openBorrowModal = (borrowerId: string) => {
    setBorrowerId(borrowerId);
    setOpenLendBookModal(true);
  };

  return borrower.length ? (
    <>
      <Head>
        <title>Library</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {openBorrowerModal && (
        <BorrowerModal
          setOpenModal={setOpenBorrowerModal}
          setBorrower={setBorrower}
        />
      )}

      {openLendBookModal && (
        <LendBook setOpenModal={setOpenLendBookModal} borrowerId={borrowerId} />
      )}

      <main className="mx-auto my-12 max-w-3xl">
        <div className="mb-8 flex justify-between">
          <h2 className="text-4xl font-bold dark:text-white">Borrowers List</h2>
          <button
            type="button"
            onClick={() => setOpenBorrowerModal(true)}
            className="mr-2 mb-2 rounded-lg bg-gradient-to-br from-pink-500 to-orange-400 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gradient-to-bl focus:outline-none focus:ring-4 focus:ring-pink-200 dark:focus:ring-pink-800"
          >
            Add Borrower
          </button>
        </div>
        <div className="overflow-x-auto">
          <table className="w-full text-left text-sm text-gray-500 dark:text-gray-400">
            <thead className="bg-gray-50 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="px-6 py-3">
                  Borrower Name
                </th>
                <th scope="col" className="px-6 py-3">
                  Email
                </th>
                <th scope="col" className="px-6 py-3">
                  Contact Number
                </th>
                <th scope="col" className="px-6 py-3">
                  Action
                </th>
              </tr>
            </thead>

            {borrower.map(({ id, name, email, contactNumber }) => (
              <tbody>
                <tr
                  key={id}
                  className="border-b bg-white dark:border-gray-700 dark:bg-gray-800"
                >
                  <td key={name + id} className="px-6 py-4">
                    {name}
                  </td>
                  <td key={email + id} className="px-6 py-4">
                    {email}
                  </td>
                  <td key={contactNumber + id} className="px-6 py-4">
                    {contactNumber}
                  </td>
                  <td key={id} className="px-6 py-4">
                    <button
                      className="mr-2 mb-2 rounded-lg bg-blue-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                      onClick={() => openBorrowModal(id)}
                    >
                      Borrow
                    </button>
                  </td>
                </tr>
              </tbody>
            ))}
          </table>
        </div>
      </main>
    </>
  ) : (
    <p>Loading...</p>
  );
};

export default Borrower;
