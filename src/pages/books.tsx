import { Book } from "@prisma/client";
import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";
import BookModal from "../components/BookModal";

const Home: NextPage = () => {
  const [books, setBooks] = useState<Book[]>([]);
  const [openBookModal, setOpenBookModal] = useState<boolean>(false);

  trpc.useQuery(["book.getAllBooks"], {
    onSuccess(books) {
      setBooks(books);
    },
  });

  // const { mutate: deleteItem } = trpc.useMutation(["items.deleteItem"], {
  //   onSuccess(shoppingItem) {
  //     setItems((prev) => prev.filter((item) => item.id !== shoppingItem.id));
  //   },
  // });

  // const { mutate: toggleChecked } = trpc.useMutation(["items.toggleChecked"], {
  //   onSuccess(shoppingItem) {
  //     // check if this item is already checked
  //     if (checkedItems.some((item) => item.id === shoppingItem.id)) {
  //       // remove it from the checked items
  //       setCheckedItems((prev) =>
  //         prev.filter((item) => item.id !== shoppingItem.id)
  //       );
  //     } else {
  //       // add it to the checked items
  //       setCheckedItems((prev) => [...prev, shoppingItem]);
  //     }
  //   },
  // });

  return books.length ? (
    <>
      <Head>
        <title>Library</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {openBookModal && (
        <BookModal setOpenModal={setOpenBookModal} setBooks={setBooks} />
      )}

      <main className="mx-auto my-12 max-w-3xl">
        <div className="mb-8 flex justify-between">
          <h2 className="text-4xl font-bold dark:text-white">
            Available Books List
          </h2>

          <button
            type="button"
            onClick={() => setOpenBookModal(true)}
            className="mr-2 mb-2 rounded-lg bg-gradient-to-br from-pink-500 to-orange-400 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gradient-to-bl focus:outline-none focus:ring-4 focus:ring-pink-200 dark:focus:ring-pink-800"
          >
            Add book
          </button>
        </div>

        <div className="overflow-x-auto">
          <table className="w-full text-left text-sm text-gray-500 dark:text-gray-400">
            <thead className="bg-gray-50 text-xs uppercase text-gray-700 dark:bg-gray-700 dark:text-gray-400">
              <tr>
                <th scope="col" className="px-6 py-3">
                  Book Name
                </th>
                <th scope="col" className="px-6 py-3">
                  Author
                </th>
                <th scope="col" className="px-6 py-3">
                  Quantity
                </th>
                <th scope="col" className="px-6 py-3">
                  Max Borrow Durartion
                </th>
              </tr>
            </thead>
            {books.map(
              ({
                id,
                name,
                author,
                quantity,
                maxBorrowDuration,
                borrowedQuantity,
              }) => (
                <tr key={id}>
                  <td className="px-6 py-4">{name}</td>
                  <td className="px-6 py-4">{author}</td>
                  <td className="px-6 py-4">{quantity - borrowedQuantity}</td>
                  <td className="px-6 py-4">{maxBorrowDuration}</td>
                </tr>
              )
            )}
          </table>
        </div>
      </main>
    </>
  ) : (
    <p>Loading...</p>
  );
};

export default Home;
